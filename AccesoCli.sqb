      ******************************************************************
      *  Open Cobol ESQL (Ocesql) Sample Program
      *
      *  FETCHTBL --- demonstrates CONNECT, SELECT COUNT(*),
      *               DECLARE cursor, FETCH cursor, COMMIT,
      *               ROLLBACK, DISCONNECT
      *
      *  Copyright 2013 Tokyo System House Co., Ltd.
      ******************************************************************
      ******************************************************************
      *  Open Cobol ESQL (Ocesql) Modificado Marzo 2024
      *  Ejemplo práctico de Altas, Bajas, Consultas, Eliminación
      *  y listado de clientes a archivo plano.
      *  ACCESOCLI --- demonstrates CONNECT, DECLARE cursor,
      *                FETCH cursor, COMMIT,ROLLBACK,DISCONNECT
      *
      *  Copyright 2024 Demonte José María - Paraná - Argentina
      ******************************************************************
       IDENTIFICATION              DIVISION.
      ******************************************************************
       PROGRAM-ID. ACCESOCLI.
       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
           SELECT IMPRESORA ASSIGN TO PRINTER "D:\LISTADO CLIENTES"
           STATUS IS WSTATUS-IMPRESORA.
      ******************************************************************
       DATA DIVISION.
       FILE SECTION.
       FD IMPRESORA.
       01 REGISTRO-IMPRESORA        PIC X(132).

       WORKING-STORAGE             SECTION.
       01  RESPUESTA                PIC X.

       01 KEY-VALUE PIC 9999.
          88 KEY-F1 VALUE 1001.
          88 KEY-F2 VALUE 1002.
          88 KEY-F3 VALUE 1003.
          88 KEY-ESCAPE VALUE 2005.
          88 KEY-ARRIBA VALUE 2003.
          88 KEY-ABAJO VALUE 2004.


       01  OPCION_MENU              PIC 99.
       01  WSTATUS-IMPRESORA        PIC XX.
       01  CONTADOR_LINEAS          PIC 99.
       01  ESPACIADO                PIC 99.
       01  FECHA.
           02 DIA                   PIC 99.
           02 MES                   PIC 99.
           02 ANIO                  PIC 9999.

       01  FECHA_PROGRAMA.
           02 ANIO             PIC 99.
           02 MES              PIC 99.
           02 DIA              PIC 99.

       01  FORM_FECHA_LISTADO.
           02 DIA  PIC 99.
           02 PIC X VALUE "/" .
           02 MES  PIC 99.
           02 PIC X VALUE "/".
           02 ANIO PIC 99.


      *    LINEA PARA TITULO DEL ENCABEZADO
       01  LINEA_ENCABEZADO.
           05  FILLER               PIC X(40).
           05  FILLER PIC X(42) VALUE
               "LISTADO TABLA CLIENTES - BASE DATOS_PRUEBA".

      *    LINEA PARA LISTADO IMPRESO.
       01  LINEA_TITULO             PIC X(112).

      *    DETALLE PARA IMPRESIÓN
       01  D-CLIENTE.
           05  FILLER               PIC  X.
           05  D-CLIENTE_CODCLI     PIC  9(06).
           05  FILLER               PIC  X(5).
      *LOS ESPACIOS ENTRE COLUMNAS YA ESTAN INCLUIDOS EN EL LARGO
      *DEFINIDO DEL CAMPO DE SALIDA IMPRESA.
           05  D-CLIENTE_NOMBRE     PIC  X(29).
           05  D-CLIENTE_CALLE      PIC  X(36).
           05  D-CLIENTE_CIUDAD     PIC  X(25).
           05  D-CLIENTE_POSTAL     PIC  99999.

      *    FIN DETALLE IMPRESION



       EXEC SQL BEGIN DECLARE SECTION END-EXEC.
       01  BUFFER                   PIC X(1024).
       01  CODIGO_CLIENTE           PIC 999999.
       01  CLI-REC-VARS.
           05  CLIENTE_CODCLI       PIC S9(06).
           05  CLIENTE_NOMBRE       PIC X(40).
           05  CLIENTE_CALLE        PIC X(40).
           05  CLIENTE_CIUDAD       PIC X(30).
           05  CLIENTE_POSTAL       PIC ZZZZZ.
       01  EMP-CNT                  PIC  9(04).
       EXEC SQL END DECLARE SECTION END-EXEC.

       EXEC SQL INCLUDE SQLCA END-EXEC.

       SCREEN SECTION.
       01 MENU_PRINCIPAL.
           02 BLANK SCREEN BACKGROUND-COLOR 0.
           02 FILLER "MENU MANEJO DE TABLA MySQL CLIENTES"
             FOREGROUND-COLOR 14 LINE 2 COL 1.
           02 FILLER "1 - CONSULTA DE CLIENTES" LINE 4 COL 1
             FOREGROUND-COLOR 2.
           02 FILLER "2 - ALTA DE CLIENTES" LINE 5 COL 1
             FOREGROUND-COLOR 2.
           02 FILLER "3 - BAJA DE CLIENTES" LINE 6 COL 1
             FOREGROUND-COLOR 2.
           02 FILLER "4 - MODIFICACION DE CLIENTES" LINE 7 COL 1
              FOREGROUND-COLOR 2.
           02 FILLER "5 - LISTADO TABLA CLIENTES" LINE 8 COL 1
              FOREGROUND-COLOR 2.
           02 FILLER "6  - SALIR " LINE 9 COL 1
              FOREGROUND-COLOR 2.
           02 FILLER "SU OPCION [  ]" LINE 11 COL 1
             FOREGROUND-COLOR 2.
           02 PIC ZZ LINE 11 COL 12 USING OPCION_MENU.


       01 PANTALLA_CONSULTA_CLIENTE.
          02 BLANK SCREEN BACKGROUND-COLOR 0.
          02 FILLER VALUE "CONSULTA DE DATOS DE CLIENTES" LINE 2 COL 30
             FOREGROUND-COLOR 4.
          02 FILLER VALUE "INGRESE CODIGO DEL CLIENTE     :"
             LINE 4 COL 5 FOREGROUND-COLOR 6.
          02 PIC ZZZZZ LINE 4 COL 37 USING CODIGO_CLIENTE
             FOREGROUND-COLOR 1 BACKGROUND-COLOR 3.
          02 LINE 24 COL 5 "ESC" FOREGROUND-COLOR 4 BACKGROUND-COLOR 7.
          02 LINE 24 COL 9 "SALIR A MENU".

       01 PANTALLA_ALTA_CLIENTE.
          02 BLANK SCREEN BACKGROUND-COLOR 0.
          02 FILLER VALUE "ALTA DE CLIENTES" LINE 2 COL 30
             FOREGROUND-COLOR 4.
          02 FILLER VALUE "INGRESE CODIGO DEL CLIENTE     :"
             LINE 4 COL 5 FOREGROUND-COLOR 6.
          02 PIC ZZZZZ LINE 4 COL 37 USING CODIGO_CLIENTE
             FOREGROUND-COLOR 1 BACKGROUND-COLOR 3.
          02 LINE 24 COL 5 "ESC" FOREGROUND-COLOR 4 BACKGROUND-COLOR 7.
          02 LINE 24 COL 9 "SALIR A MENU".

       01 PANTALLA_MODIFICO_CLIENTE.
          02 BLANK SCREEN BACKGROUND-COLOR 0.
          02 FILLER VALUE "MODIFICACION DATOS CLIENTES" LINE 2 COL 30
             FOREGROUND-COLOR 4.
          02 FILLER VALUE "INGRESE CODIGO DEL CLIENTE     :"
             LINE 4 COL 5 FOREGROUND-COLOR 6.
          02 PIC ZZZZZ LINE 4 COL 37 USING CODIGO_CLIENTE
             FOREGROUND-COLOR 1 BACKGROUND-COLOR 3.
          02 LINE 24 COL 5 "ESC" FOREGROUND-COLOR 4 BACKGROUND-COLOR 7.
          02 LINE 24 COL 9 "SALIR A MENU".

       01 PANTALLA_BAJA_CLIENTE.
          02 BLANK SCREEN BACKGROUND-COLOR 0.
          02 FILLER VALUE "BAJA DE CLIENTES" LINE 2 COL 30
             FOREGROUND-COLOR 4.
          02 FILLER VALUE "INGRESE CODIGO DEL CLIENTE     :"
             LINE 4 COL 5 FOREGROUND-COLOR 6.
          02 PIC ZZZZZ LINE 4 COL 37 USING CODIGO_CLIENTE
             FOREGROUND-COLOR 1 BACKGROUND-COLOR 3.
          02 LINE 24 COL 5 "ESC" FOREGROUND-COLOR 4 BACKGROUND-COLOR 7.
          02 LINE 24 COL 9 "SALIR A MENU".

       01 PANTALLA_MUESTRO_CLIENTE.
          02 FILLER VALUE "APELLIDO Y NOMBRE :"
             LINE 6 COL 5 REQUIRED.
          02 PIC X(40) LINE 6 COL 24 USING CLIENTE_NOMBRE
             FOREGROUND-COLOR 2 REQUIRED.
          02 FILLER VALUE "DOMICILIO         :"
             LINE 8 COL 5.
          02 PIC X(30) LINE 8 COL 24 USING CLIENTE_CALLE
             FOREGROUND-COLOR 2 REQUIRED.
          02 FILLER VALUE "CIUDAD            :" LINE 10 COL 5.
          02 PIC X(30) LINE 10 COL 24 USING CLIENTE_CIUDAD
             FOREGROUND-COLOR 2 REQUIRED.
          02 FILLER VALUE "CODIGO POSTAL     :"
             LINE 12 COL 5.
          02 PIC Z(11) LINE 12 COL 24 USING CLIENTE_POSTAL
             FOREGROUND-COLOR 2 REQUIRED.

      ******************************************************************
       PROCEDURE DIVISION.
      ******************************************************************
       INICIO_PROGRAMA.
      *****************
       STRING 'DRIVER={MySQL ODBC 8.0 ANSI Driver};'
              'UID=;'
              'USER=root;'
              'PASSWORD=;'
              'SERVER=localhost;'
              'PORT=3306;'
              'NO_SCHEMA=1;'
              'DB=clientes;'
              'DATABASE=datos_prueba;'
              'COMRESSED_PROTO=0;'
       INTO BUFFER.

       EXEC SQL CONNECT TO :BUFFER END-EXEC.

       IF  SQLCODE NOT = ZERO PERFORM ERROR-RTN STOP RUN.

       PERFORM UNTIL OPCION_MENU = 6
         DISPLAY MENU_PRINCIPAL
         ACCEPT MENU_PRINCIPAL
         EVALUATE OPCION_MENU
           WHEN 1  MOVE SPACES TO RESPUESTA
                   PERFORM CONSULTA_CLIENTE THRU
                           FIN_CONSULTA_CLIENTE
                           UNTIL RESPUESTA = "N"
           WHEN 2  MOVE SPACES TO RESPUESTA
                   PERFORM ALTA_CLIENTE THRU
                           FIN_ALTA_CLIENTE
                           UNTIL RESPUESTA = "N"
           WHEN 3  MOVE SPACES TO RESPUESTA
                   PERFORM BAJA_CLIENTE THRU
                           FIN_BAJA_CLIENTE
                           UNTIL RESPUESTA = "N"
           WHEN 4  MOVE SPACES TO RESPUESTA
                   PERFORM MODIFICO_CLIENTE THRU
                           FIN_MODIFICO_CLIENTE
                           UNTIL RESPUESTA = "N"
           WHEN 5  MOVE SPACES TO RESPUESTA
                   PERFORM LISTADO_CLIENTE THRU
                           FIN_LISTADO_CLIENTE

           WHEN 6  PERFORM CIERRE THRU FIN-CIERRE
                   STOP RUN
         END-EVALUATE
         MOVE ZEROS TO OPCION_MENU

       END-PERFORM.

       CONSULTA_CLIENTE.
      ******************
           DISPLAY PANTALLA_CONSULTA_CLIENTE.
           ACCEPT PANTALLA_CONSULTA_CLIENTE.
           ACCEPT KEY-VALUE FROM ESCAPE KEY.

           IF KEY-VALUE NOT = 2005
               EXEC SQL
                   SELECT CODCLI, NOMBRE, CALLE,
                          CIUDAD,POSTAL
                          INTO
                          :CLIENTE_CODCLI,
                          :CLIENTE_NOMBRE,
                          :CLIENTE_CALLE,
                          :CLIENTE_CIUDAD,
                          :CLIENTE_POSTAL
                          FROM CLIENTES
                          WHERE CODCLI = :CODIGO_CLIENTE
               END-EXEC

               IF  SQLCODE NOT = ZERO
                  EVALUATE SQLCODE
                    WHEN  = 100
                       DISPLAY "REGISTRO NO ENCONTRADO" LINE 14 COL 5
                               FOREGROUND-COLOR 4 BLINK
                    WHEN OTHER
                       PERFORM ERROR-RTN STOP RUN
                   END-EVALUATE
               ELSE
                   DISPLAY PANTALLA_MUESTRO_CLIENTE
               END-IF

               DISPLAY "SIGUE CONSULTANDO [ ]?"
                         LINE 16 COL 5 FOREGROUND-COLOR 7

               PERFORM UNTIL RESPUESTA = "S" OR RESPUESTA = "N"
                 ACCEPT RESPUESTA UPDATE LINE 16 COL 24
                 INSPECT RESPUESTA CONVERTING "sn" TO "SN"
               END-PERFORM

               IF RESPUESTA = "S" MOVE SPACES TO RESPUESTA END-IF

               MOVE ZEROS TO CODIGO_CLIENTE

           ELSE
              MOVE "N" TO RESPUESTA
           END-IF.

       FIN_CONSULTA_CLIENTE.
      **********************
           EXIT.

       ALTA_CLIENTE.
      **************
           DISPLAY PANTALLA_ALTA_CLIENTE.
           ACCEPT PANTALLA_ALTA_CLIENTE.
           ACCEPT KEY-VALUE FROM ESCAPE KEY.
           IF KEY-VALUE NOT = 2005
               EXEC SQL
                   SELECT CODCLI, NOMBRE, CALLE,
                          CIUDAD,POSTAL
                          INTO
                              :CLIENTE_CODCLI,
                              :CLIENTE_NOMBRE,
                              :CLIENTE_CALLE,
                              :CLIENTE_CIUDAD,
                              :CLIENTE_POSTAL
                          FROM CLIENTES
                          WHERE CODCLI = :CODIGO_CLIENTE
               END-EXEC

               IF SQLCODE = 100
                 DISPLAY PANTALLA_MUESTRO_CLIENTE
                 ACCEPT PANTALLA_MUESTRO_CLIENTE
                 EXEC SQL
                   INSERT INTO CLIENTES
                   (CODCLI,NOMBRE,CALLE,CIUDAD,POSTAL)
                   VALUES (:CODIGO_CLIENTE,
                           :CLIENTE_NOMBRE,
                           :CLIENTE_CALLE,
                           :CLIENTE_CIUDAD,
                           :CLIENTE_POSTAL)
                 END-EXEC
                 EXEC SQL
                   COMMIT WORK
                 END-EXEC
               ELSE
                  EVALUATE SQLCODE
                    WHEN 0
                       DISPLAY PANTALLA_MUESTRO_CLIENTE
                       DISPLAY "ESTE CLIENTE YA EXISTE" LINE 14 COL 5
                                FOREGROUND-COLOR 4 BLINK
                    WHEN OTHER
                       PERFORM ERROR-RTN STOP RUN
                   END-EVALUATE
               END-IF

               DISPLAY "SIGUE INGRESANDO ? S/N [ ]?"
                         LINE 16 COL 5 FOREGROUND-COLOR 7

               PERFORM UNTIL RESPUESTA = "S" OR RESPUESTA = "N"
                 ACCEPT RESPUESTA UPDATE LINE 16 COL 29
                 INSPECT RESPUESTA CONVERTING "sn" TO "SN"
               END-PERFORM

               IF RESPUESTA = "S" MOVE SPACES TO RESPUESTA END-IF

               MOVE ZEROS TO CODIGO_CLIENTE
           ELSE
              MOVE "N" TO RESPUESTA
           END-IF.
       FIN_ALTA_CLIENTE.
      ******************
           EXIT.

       BAJA_CLIENTE.
      **************
           DISPLAY PANTALLA_BAJA_CLIENTE.
           ACCEPT PANTALLA_BAJA_CLIENTE.
           ACCEPT KEY-VALUE FROM ESCAPE KEY.
           IF KEY-VALUE NOT = 2005
               EXEC SQL
                   SELECT CODCLI, NOMBRE, CALLE,
                          CIUDAD,POSTAL
                          INTO
                              :CLIENTE_CODCLI,
                              :CLIENTE_NOMBRE,
                              :CLIENTE_CALLE,
                              :CLIENTE_CIUDAD,
                              :CLIENTE_POSTAL
                          FROM CLIENTES
                          WHERE CODCLI = :CODIGO_CLIENTE
               END-EXEC

               IF  SQLCODE NOT = ZERO
                  EVALUATE SQLCODE
                    WHEN  = 100
                       DISPLAY "REGISTRO NO ENCONTRADO" LINE 14 COL 5
                                FOREGROUND-COLOR 4 BLINK
                    WHEN OTHER
                       PERFORM ERROR-RTN STOP RUN
                   END-EVALUATE
               ELSE
                   DISPLAY PANTALLA_MUESTRO_CLIENTE
                   DISPLAY "CONFIRMA BORRADO S/N [ ]?"
                         LINE 16 COL 5 FOREGROUND-COLOR 7
                   PERFORM UNTIL RESPUESTA = "S" OR RESPUESTA = "N"
                     ACCEPT RESPUESTA UPDATE LINE 16 COL 38
                     INSPECT RESPUESTA CONVERTING "sn" TO "SN"
                   END-PERFORM

                   IF RESPUESTA = "S"
                      EXEC SQL
                       DELETE FROM datos_prueba.clientes
                       WHERE (CODCLI = :CODIGO_CLIENTE);
                      END-EXEC
                      EXEC SQL
                       COMMIT WORK
                      END-EXEC
                   END-IF
               END-IF

               MOVE SPACES TO RESPUESTA

               DISPLAY "SIGUE PROCEDIMIENTO DE BORRADO S/N [ ]?"
                         LINE 16 COL 5 FOREGROUND-COLOR 7

               PERFORM UNTIL RESPUESTA = "S" OR RESPUESTA = "N"
                 ACCEPT RESPUESTA UPDATE LINE 16 COL 41
                 INSPECT RESPUESTA CONVERTING "sn" TO "SN"
               END-PERFORM

               MOVE ZEROS TO CODIGO_CLIENTE
           ELSE
               MOVE "N" TO RESPUESTA
           END-IF.
       FIN_BAJA_CLIENTE.
      ******************
           EXIT.

       MODIFICO_CLIENTE.
      ******************
           DISPLAY PANTALLA_MODIFICO_CLIENTE.
           ACCEPT PANTALLA_MODIFICO_CLIENTE.
           ACCEPT KEY-VALUE FROM ESCAPE KEY.
           IF KEY-VALUE NOT = 2005
               EXEC SQL
                   SELECT CODCLI, NOMBRE, CALLE,
                          CIUDAD,POSTAL
                          INTO
                              :CLIENTE_CODCLI,
                              :CLIENTE_NOMBRE,
                              :CLIENTE_CALLE,
                              :CLIENTE_CIUDAD,
                              :CLIENTE_POSTAL
                          FROM CLIENTES
                          WHERE CODCLI = :CODIGO_CLIENTE
               END-EXEC

               IF  SQLCODE NOT = ZERO
                  EVALUATE SQLCODE
                    WHEN  = 100
                       DISPLAY "REGISTRO NO ENCONTRADO" LINE 14 COL 5
                              FOREGROUND-COLOR 4 BLINK
                    WHEN OTHER
                       PERFORM ERROR-RTN STOP RUN
                   END-EVALUATE
               ELSE
                   DISPLAY PANTALLA_MUESTRO_CLIENTE
                   ACCEPT PANTALLA_MUESTRO_CLIENTE

               EXEC SQL
                UPDATE datos_prueba.clientes
                SET NOMBRE = :CLIENTE_NOMBRE,
                    CALLE = :CLIENTE_CALLE,
                    CIUDAD = :CLIENTE_CIUDAD,
                    POSTAL = :CLIENTE_POSTAL
                WHERE (CODCLI = :CODIGO_CLIENTE);
               END-EXEC

               EXEC SQL
                 COMMIT WORK
               END-EXEC

               END-IF

               DISPLAY "SIGUE MODIFICANDO [ ]?"
                         LINE 16 COL 5 FOREGROUND-COLOR 7

               PERFORM UNTIL RESPUESTA = "S" OR RESPUESTA = "N"
                 ACCEPT RESPUESTA UPDATE LINE 16 COL 24
                 INSPECT RESPUESTA CONVERTING "sn" TO "SN"
               END-PERFORM

               IF RESPUESTA = "S" MOVE SPACES TO RESPUESTA END-IF

               MOVE ZEROS TO CODIGO_CLIENTE
             ELSE
               MOVE "N" TO RESPUESTA
           END-IF.

       FIN_MODIFICO_CLIENTE.
      **********************
           EXIT.

       LISTADO_CLIENTE.
      *****************
           ACCEPT FECHA_PROGRAMA FROM DATE.

           MOVE CORRESPONDING FECHA_PROGRAMA TO FORM_FECHA_LISTADO.

           OPEN OUTPUT IMPRESORA.
           EXEC SQL
               DECLARE C1 CURSOR FOR
               SELECT CODCLI, NOMBRE, CALLE,
                      CIUDAD,POSTAL
                      FROM CLIENTES
                      ORDER BY CODCLI
           END-EXEC

           EXEC SQL
               OPEN C1
           END-EXEC

           PERFORM ENCABEZADO THRU FIN_ENCABEZADO.

      * PRIMERA ITERACCION
           EXEC SQL
               FETCH C1 INTO :CLIENTE_CODCLI, :CLIENTE_NOMBRE,
                             :CLIENTE_CALLE,:CLIENTE_CIUDAD,
                             :CLIENTE_POSTAL
           END-EXEC.

           MOVE D-CLIENTE TO REGISTRO-IMPRESORA.
           WRITE REGISTRO-IMPRESORA.
           ADD 1 TO CONTADOR_LINEAS.
           PERFORM UNTIL SQLCODE NOT = ZERO
              MOVE  CLIENTE_CODCLI    TO    D-CLIENTE_CODCLI
              MOVE  CLIENTE_NOMBRE    TO    D-CLIENTE_NOMBRE
              MOVE  CLIENTE_CALLE     TO    D-CLIENTE_CALLE
              MOVE  CLIENTE_CIUDAD    TO    D-CLIENTE_CIUDAD
              MOVE  CLIENTE_POSTAL    TO    D-CLIENTE_POSTAL
      *        DISPLAY D-CLIENTE
              EXEC SQL
                   FETCH C1 INTO :CLIENTE_CODCLI, :CLIENTE_NOMBRE,
                                 :CLIENTE_CALLE,:CLIENTE_CIUDAD,
                                 :CLIENTE_POSTAL
              END-EXEC
              MOVE D-CLIENTE TO REGISTRO-IMPRESORA
              WRITE REGISTRO-IMPRESORA
              ADD 1 TO CONTADOR_LINEAS
              IF CONTADOR_LINEAS > 66
                COMPUTE ESPACIADO = 72 - CONTADOR_LINEAS
                PERFORM SALTO THRU FIN_SALTO ESPACIADO TIMES
                PERFORM ENCABEZADO THRU FIN_ENCABEZADO
              END-IF
           END-PERFORM.

           CLOSE IMPRESORA.

      *    CLOSE CURSOR
           EXEC SQL
               CLOSE C1
           END-EXEC.

       FIN_LISTADO_CLIENTE.
      *********************
           EXIT.

       ENCABEZADO.
      ************
           STRING "FECHA: ",
                  FORM_FECHA_LISTADO
                INTO REGISTRO-IMPRESORA.
           WRITE REGISTRO-IMPRESORA.
           PERFORM SALTO THRU FIN_SALTO.
           WRITE REGISTRO-IMPRESORA FROM LINEA_ENCABEZADO.
           MOVE SPACES TO REGISTRO-IMPRESORA.
           WRITE REGISTRO-IMPRESORA.
           MOVE ALL "-" TO LINEA_TITULO.
           WRITE REGISTRO-IMPRESORA FROM LINEA_TITULO.
           MOVE "ID CLIENTE     NOMBRE                        CALLE
      -    "                      CIUDAD                 COD. POSTAL"
           TO LINEA_TITULO.
           WRITE REGISTRO-IMPRESORA FROM LINEA_TITULO.
           MOVE ALL "-" TO LINEA_TITULO.
           WRITE REGISTRO-IMPRESORA FROM LINEA_TITULO.
           MOVE 7 TO CONTADOR_LINEAS.
       FIN_ENCABEZADO.
      ****************
           EXIT.

       SALTO.
      *******
           MOVE SPACES TO REGISTRO-IMPRESORA.
           WRITE REGISTRO-IMPRESORA.
       FIN_SALTO.
      ***********
           EXIT.

       CIERRE.
      *    FINALIZO PROGRAMA, VOLCADO Y DESCONEXIÓN
      *    COMMIT
       EXEC SQL
           COMMIT WORK
       END-EXEC.
      *    DISCONNECT
       EXEC SQL
           DISCONNECT ALL
       END-EXEC.
       FIN-CIERRE.
           EXIT.


      ******************************************************************
       ERROR-RTN.
      ******************************************************************
       DISPLAY "*** SQL ERROR ***".
       DISPLAY "SQLCODE: " SQLCODE " " NO ADVANCING.
       EVALUATE SQLCODE
          WHEN 100 CONTINUE

          WHEN -000002003
             DISPLAY "NO SE PUEDE CONECTAR A LA BASE DE DATOS"
          WHEN  +10
             DISPLAY "Record not found"
          WHEN  -01
             DISPLAY "Connection falied"
          WHEN  -20
             DISPLAY "Internal error"
          WHEN  -30
             DISPLAY "PostgreSQL error"
             DISPLAY "ERRCODE: "  SQLSTATE
             DISPLAY SQLERRMC
          *> TO RESTART TRANSACTION, DO ROLLBACK.
             EXEC SQL
                 ROLLBACK
             END-EXEC
          WHEN  OTHER
             DISPLAY "Undefined error"
             DISPLAY "ERRCODE: "  SQLSTATE
             DISPLAY SQLERRMC
       END-EVALUATE.


       TOMO_CODIGO_TECLA.
           IF KEY-F1
              DISPLAY "TECLA F1 PRESIONADA" LINE 25 COL 1
              ACCEPT RESPUESTA LINE 25 COL 40
           END-IF.

       FIN_TOMO_CODIGO_TECLA.
           EXIT.
